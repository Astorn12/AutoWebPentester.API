using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using AutoWebPentester.API.Model;
using Microsoft.EntityFrameworkCore;

namespace AutoWebPentester.API.Data.ResourcesRepository
{
    public class ResourceRepository : IResourceRepository
    {
        private readonly DataContext _context;

        public ResourceRepository(DataContext context)
        {
            this._context = context;
        }
        public async Task<List<Resource>> GetResources(int websiteId)
        {
            return await this._context.Resources.Where(x=>x.WebSiteId==websiteId).ToListAsync();
        }

        public async  Task<List<Resource>> GetResourcesByName(int websiteId, string resourceName)
        {
            return await this._context.Resources.Where(x=>x.WebSiteId==websiteId && x.Name.Equals(resourceName)).ToListAsync();
        }

        public async Task<ResourceSketch> GetResourceSketch(string name)
        {
           return await  this._context.ResourceSketches.FirstOrDefaultAsync(x=>x.Name==name);
        }

        public async Task<Resource> AddResource(Resource resource)
        {
            if(! await HasBeenAlreadyDetectedAsync(resource)){
            await this._context.Resources.AddAsync(resource);
             this._context.SaveChanges();
            }
            
            return resource;
        } 

        private async Task<bool> HasBeenAlreadyDetectedAsync(Resource resource){
            List<Resource> resourceWithSameSkatche= await this._context.Resources.Where(x=>x.ResourceSketchId==resource.ResourceSketchId&& resource.WebSiteId==x.WebSiteId).ToListAsync();
            foreach(Resource r in resourceWithSameSkatche){
                if(resource.Content.Equals(r.Content)){
                    return true;
                }
            }
            return false;
        }

        public async Task AddResourcesAsync(List<Resource> formResources)
        {
            List<Resource> resources= new List<Resource>();
            foreach(Resource r in formResources){
                if(! await HasBeenAlreadyDetectedAsync(r)){
                   //resources.Add(r); 
                   await this._context.Resources.AddAsync(r);

            }
            }
            

            await this._context.SaveChangesAsync();
        }
    }
}