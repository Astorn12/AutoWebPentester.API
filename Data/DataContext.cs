
using AutoWebPentester.API.Model;
using AutoWebPentester.API.Models;
using Microsoft.EntityFrameworkCore;

namespace AutoWebPentester.API.Data
{
    public class DataContext : DbContext
    {
        public DataContext(DbContextOptions<DataContext> options) : base(options)
        {

        }
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserWebSite>()
                .HasKey(bc => new { bc.UserId, bc.WebSiteId });
            modelBuilder.Entity<UserWebSite>()
                .HasOne(bc => bc.User)
                .WithMany(b => b.UserWebSites)
                .HasForeignKey(bc => bc.UserId);
            modelBuilder.Entity<UserWebSite>()
                .HasOne(bc => bc.WebSite)
                .WithMany(c => c.UserWebSites)
                .HasForeignKey(bc => bc.WebSiteId);


            modelBuilder.Entity<PentestSketch>()
            .Property(b => b._Inputs).HasColumnName("Inputs");

             modelBuilder.Entity<PentestTag>()
                .HasKey(bc => new { bc.PentestSketchId, bc.TagId });
            modelBuilder.Entity<PentestTag>()
                .HasOne(bc => bc.PentestSketch)
                .WithMany(b => b.PentestTags)
                .HasForeignKey(bc => bc.PentestSketchId);
            modelBuilder.Entity<PentestTag>()
                .HasOne(bc => bc.Tag)
                .WithMany(c => c.PentestTags)
                .HasForeignKey(bc => bc.TagId);


        }
        public DbSet<User> Users { get; set; }
        public DbSet<WebSite> WebSites { get; set; }
        public DbSet<UserWebSite> UserWebSites { get; set; }
        public DbSet<Header> Headers { get; set; }
        public DbSet<HeaderPossibleValue> HeaderPossibleValues { get; set; }
        public DbSet<TagKind> TagKinds { get; set; }
        public DbSet<Tag> Tags { get; set; }

        public DbSet<PentestTag> PentestTags {get; set;}
        public DbSet<PentestSketch> PentestSketches { get; set; }

    }

}