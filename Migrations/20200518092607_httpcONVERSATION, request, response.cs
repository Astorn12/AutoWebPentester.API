using Microsoft.EntityFrameworkCore.Migrations;

namespace AutoWebPentester.API.Migrations
{
    public partial class httpcONVERSATIONrequestresponse : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Requests",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Method = table.Column<string>(nullable: true),
                    Url = table.Column<string>(nullable: true),
                    Version = table.Column<string>(nullable: true),
                    Body = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Requests", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Responses",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Method = table.Column<string>(nullable: true),
                    Url = table.Column<string>(nullable: true),
                    Version = table.Column<string>(nullable: true),
                    Body = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Responses", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "ConcreteHeader",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(nullable: true),
                    Type = table.Column<int>(nullable: false),
                    RequestId = table.Column<int>(nullable: true),
                    ResponseId = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ConcreteHeader", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ConcreteHeader_Requests_RequestId",
                        column: x => x.RequestId,
                        principalTable: "Requests",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_ConcreteHeader_Responses_ResponseId",
                        column: x => x.ResponseId,
                        principalTable: "Responses",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "HttpConversations",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WebsiteId = table.Column<int>(nullable: false),
                    RequestId = table.Column<int>(nullable: false),
                    ResponseId = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HttpConversations", x => x.Id);
                    table.ForeignKey(
                        name: "FK_HttpConversations_Requests_RequestId",
                        column: x => x.RequestId,
                        principalTable: "Requests",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_HttpConversations_Responses_ResponseId",
                        column: x => x.ResponseId,
                        principalTable: "Responses",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_HttpConversations_WebSites_WebsiteId",
                        column: x => x.WebsiteId,
                        principalTable: "WebSites",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ConcreteHeaderValue",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Value = table.Column<string>(nullable: true),
                    ConcreteHeaderId = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ConcreteHeaderValue", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ConcreteHeaderValue_ConcreteHeader_ConcreteHeaderId",
                        column: x => x.ConcreteHeaderId,
                        principalTable: "ConcreteHeader",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_ConcreteHeader_RequestId",
                table: "ConcreteHeader",
                column: "RequestId");

            migrationBuilder.CreateIndex(
                name: "IX_ConcreteHeader_ResponseId",
                table: "ConcreteHeader",
                column: "ResponseId");

            migrationBuilder.CreateIndex(
                name: "IX_ConcreteHeaderValue_ConcreteHeaderId",
                table: "ConcreteHeaderValue",
                column: "ConcreteHeaderId");

            migrationBuilder.CreateIndex(
                name: "IX_HttpConversations_RequestId",
                table: "HttpConversations",
                column: "RequestId");

            migrationBuilder.CreateIndex(
                name: "IX_HttpConversations_ResponseId",
                table: "HttpConversations",
                column: "ResponseId");

            migrationBuilder.CreateIndex(
                name: "IX_HttpConversations_WebsiteId",
                table: "HttpConversations",
                column: "WebsiteId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "ConcreteHeaderValue");

            migrationBuilder.DropTable(
                name: "HttpConversations");

            migrationBuilder.DropTable(
                name: "ConcreteHeader");

            migrationBuilder.DropTable(
                name: "Requests");

            migrationBuilder.DropTable(
                name: "Responses");
        }
    }
}
