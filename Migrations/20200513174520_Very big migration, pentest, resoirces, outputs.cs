using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace AutoWebPentester.API.Migrations
{
    public partial class Verybigmigrationpentestresoircesoutputs : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Pentests",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Date = table.Column<DateTime>(nullable: false),
                    UserId = table.Column<int>(nullable: false),
                    PentestSketchId = table.Column<int>(nullable: false),
                    WebsiteId = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Pentests", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Pentests_PentestSketches_PentestSketchId",
                        column: x => x.PentestSketchId,
                        principalTable: "PentestSketches",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Pentests_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Pentests_WebSites_WebsiteId",
                        column: x => x.WebsiteId,
                        principalTable: "WebSites",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ResourceGroups",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(nullable: true),
                    Type = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceGroups", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Outcomes",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DateTime = table.Column<DateTime>(nullable: false),
                    JSONOutcome = table.Column<string>(nullable: true),
                    PentestId = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Outcomes", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Outcomes_Pentests_PentestId",
                        column: x => x.PentestId,
                        principalTable: "Pentests",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ResourceSketchs",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(nullable: true),
                    IsAutoFinded = table.Column<bool>(nullable: false),
                    ResourceGroupId = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceSketchs", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ResourceSketchs_ResourceGroups_ResourceGroupId",
                        column: x => x.ResourceGroupId,
                        principalTable: "ResourceGroups",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "Resources",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ResourceSketchId = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Resources", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Resources_ResourceSketchs_ResourceSketchId",
                        column: x => x.ResourceSketchId,
                        principalTable: "ResourceSketchs",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PentestRequiredResources",
                columns: table => new
                {
                    PentestSketchId = table.Column<int>(nullable: false),
                    ResourceId = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PentestRequiredResources", x => new { x.PentestSketchId, x.ResourceId });
                    table.ForeignKey(
                        name: "FK_PentestRequiredResources_PentestSketches_PentestSketchId",
                        column: x => x.PentestSketchId,
                        principalTable: "PentestSketches",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_PentestRequiredResources_Resources_ResourceId",
                        column: x => x.ResourceId,
                        principalTable: "Resources",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_Outcomes_PentestId",
                table: "Outcomes",
                column: "PentestId");

            migrationBuilder.CreateIndex(
                name: "IX_PentestRequiredResources_ResourceId",
                table: "PentestRequiredResources",
                column: "ResourceId");

            migrationBuilder.CreateIndex(
                name: "IX_Pentests_PentestSketchId",
                table: "Pentests",
                column: "PentestSketchId");

            migrationBuilder.CreateIndex(
                name: "IX_Pentests_UserId",
                table: "Pentests",
                column: "UserId");

            migrationBuilder.CreateIndex(
                name: "IX_Pentests_WebsiteId",
                table: "Pentests",
                column: "WebsiteId");

            migrationBuilder.CreateIndex(
                name: "IX_Resources_ResourceSketchId",
                table: "Resources",
                column: "ResourceSketchId");

            migrationBuilder.CreateIndex(
                name: "IX_ResourceSketchs_ResourceGroupId",
                table: "ResourceSketchs",
                column: "ResourceGroupId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Outcomes");

            migrationBuilder.DropTable(
                name: "PentestRequiredResources");

            migrationBuilder.DropTable(
                name: "Pentests");

            migrationBuilder.DropTable(
                name: "Resources");

            migrationBuilder.DropTable(
                name: "ResourceSketchs");

            migrationBuilder.DropTable(
                name: "ResourceGroups");
        }
    }
}
