using System.Threading.Tasks;
using AutoWebPentester.API.Data;
using AutoWebPentester.API.Data.HttpRepositories;
using AutoWebPentester.API.DTOs;
using AutoWebPentester.API.Services.RequestServices;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;

namespace AutoWebPentester.API.Controllers
{
    [Authorize]
    [ApiController]
    [Route("api/[controller]")]
    public class RequestController : ControllerBase
    {
        private  IRequestService _service;
        private  IHttpRepository _repoHttp;

        public RequestController(IRequestService service, IHttpRepository repoHttp)
        {
            _service = service;
            _repoHttp = repoHttp;
        }

        [HttpGet("headers")]
        public async Task<IActionResult> GetAllHeaders(){
            return  Ok(await _service.GetAllHeaders());
        }

        [HttpGet("httpMethods")]
        public async Task<IActionResult> GetHttpMethods(){
            var methods=_repoHttp.GetHttpMethods();
            return Ok(methods);
        }

        [HttpGet("httpVersions")]
        public async Task<IActionResult> GetHttpVersions(){
            var version= _repoHttp.GetHttpVersions();
            return Ok(version);
        }

        [HttpPost("request")]
        public async Task<IActionResult> MakeRequest(){

        RequestDto requestExample= new RequestDto(){
            Method="Get",
            Url="https://data.twitter.com"
        };

            
        var response=await _service.MakeRequest(requestExample);
            return Ok(response);
        }


    }
}